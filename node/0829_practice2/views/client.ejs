<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>

    <title>채팅창</title>
</head>

<body>
    <ul class="chat-container" id="chatting"></ul>
    <form id="chat">
        <input type="text" id="message" />
        <button>전송</button>
    </form>

    <style>
        .chat-container {
            background-color: skyblue;
            max-width: 400px;
            padding: 20px;
            height: 700px;
            overflow-y: auto;
        }

        .message {
            clear: both;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
            word-break: break-all;
        }

        .my-message {
            background-color: yellow;
            text-align: right;
            float: right;
        }

        .other-message {
            background-color: #e0e0e0;
            text-align: left;
            float: left;
        }
    </style>

    <script>
        const chatForm = document.querySelector("#chat");
        const ul = document.querySelector('#chatting');
        // 클라이언트 소켓 연결
        const socket = io();

        // 채팅방 생성
        const chatRoom = prompt('채팅방명을 입력하세요');
        socket.emit('join', chatRoom);

        socket.on('chat', (res) => {
            addMessage(res.message, res.senderId === socket.id ? 'my-message' : 'other-message');
        });


        // 폼 이벤트
        chatForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const msg = chatForm.querySelector('#message');
            socket.emit('message', { message: msg.value, senderId: socket.id });
            msg.value = '';
        });

        function addMessage(message, position) {
            const div = document.createElement('div');
            div.textContent = message;
            div.className = 'message ' + position;
            ul.appendChild(div);
        };

        function leave() {
            console.log('leave');
            socket.emit('leave');
        };
    </script>
</body>

</html>